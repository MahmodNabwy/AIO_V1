<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Boilerplate.API</name>
    </assembly>
    <members>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.GetAllAsync">
            <summary>
            Get all  Departments in admin panal 
            </summary>
            <returns> All  Departments</returns>
            <remarks> Get all  Departments without filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.Search(Boilerplate.Contracts.Filters.DepartmentAdminFilter)">
            <summary>
            Get all Departments with filter in admin panal 
            </summary>
            <returns> All Departments with filter</returns>
            <remarks> Get all Departments with filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.GetAsync(System.Int64)">
            <summary>
            Get  Department in admin panal by Id
            </summary>
            <returns> Specific  Department </returns>
            <remarks> Get Specific  Department by id For user that has get permission</remarks>
            <param name="id" example="1">The  Department id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.PostAsync(Boilerplate.Contracts.DTOs.Setter.Departments.Department.DepartmentSetterDTO)">
            <summary>
            Add new Department in admin panal
            </summary>
            <remarks> 
            Add Department by user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.Put(Boilerplate.Contracts.DTOs.Setter.Departments.Department.DepartmentUpdateSetterDTO)">
            <summary>
            Update  Department in admin panal
            </summary>
            <remarks> 
            Update  Department by user that has update permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.Delete(System.Int64)">
            <summary>
            Delete  Department in admin panal
            </summary>
            <remarks> 
            Delete  Department by user that has Delete permisssions
            </remarks>
            <param name="id" example="1">The  Department id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.Trash(System.Int64)">
            <summary>
            Trashed  Department in admin panal
            </summary>
            <remarks> 
            Trashed  Department by user that has SoftDelete permisssions
            </remarks>
            <param name="id" example="1">The  Department id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Departments.DepartmentController.UnTrash(System.Int64)">
            <summary>
            UnTrashed Department in admin panal
            </summary>
            <remarks> 
            UnTrashed Department by user that has SoftDelete permisssions
            </remarks> 
            <param name="id" example="1">The  Department id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.GetAllAsync">
            <summary>
            Get all  Department Users in admin panal 
            </summary>
            <returns> All  Department Users</returns>
            <remarks> Get all  Department Users without filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.GetAsync(System.Int64)">
            <summary>
            Get  Department User in admin panal by Id
            </summary>
            <returns> Specific  Department User </returns>
            <remarks> Get Specific  Department User by id For user that has get permission</remarks>
            <param name="id" example="1">The  Department User id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.PostAsync(Boilerplate.Contracts.DTOs.Setter.Departments.DepartmentUser.DepartmentUserSetterDTO)">
            <summary>
            Add new Department User in admin panal
            </summary>
            <remarks> 
            Add Department User by user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.PostBatchAsync(Boilerplate.Contracts.DTOs.Setter.Departments.DepartmentUser.DepartmentUserBatchSetterDTO)">
            <summary>
            Assign User to list of Departments in admin panal
            </summary>
            <remarks> 
            Assign User to list of Departmentsby user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.Put(Boilerplate.Contracts.DTOs.Setter.Departments.DepartmentUser.DepartmentUserUpdateSetterDTO)">
            <summary>
            Update  Department User in admin panal
            </summary>
            <remarks> 
            Update  Department User by user that has update permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.Delete(System.Int64)">
            <summary>
            Delete  Department User in admin panal
            </summary>
            <remarks> 
            Delete  Department User by user that has Delete permisssions
            </remarks>
            <param name="id" example="1">The  Department User id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.Trash(System.Int64)">
            <summary>
            Trashed  Department User in admin panal
            </summary>
            <remarks> 
            Trashed  Department User by user that has SoftDelete permisssions
            </remarks>
            <param name="id" example="1">The  Department User id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.DepartmentUsers.DepartmentUserController.UnTrash(System.Int64)">
            <summary>
            UnTrashed Department User in admin panal
            </summary>
            <remarks> 
            UnTrashed Department User by user that has SoftDelete permisssions
            </remarks> 
            <param name="id" example="1">The  Department User id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Elements.ElementController.GetAllAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Get all  Elements in admin panal 
            </summary>
            <returns> All  Elements</returns>
            <remarks> Get all  Elements without filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Elements.ElementController.Search(Boilerplate.Contracts.Filters.ElementFilter)">
            <summary>
            Get all  Elements with filter in admin panal 
            </summary>
            <returns> All  Elements with filter</returns>
            <remarks> Get all  Elements with filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Elements.ElementController.GetAsync(System.Int64)">
            <summary>
            Get  Element in admin panal by Id
            </summary>
            <returns> Specific  Element </returns>
            <remarks> Get Specific  Element by id For user that has get permission</remarks>
            <param name="id" example="1">The  Element id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Elements.ElementController.GetAsync(System.String)">
            <summary>
            Get  Element in admin panal by key
            </summary>
            <returns> Specific  Element </returns>
            <remarks> Get Specific  Element by key For user that has get permission</remarks>
            <param name="key" example="mission_vision">The  Element key</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Elements.ElementController.Put(Boilerplate.Contracts.DTOs.Setter.Elements.Element.ElementUpdateSetterDTO)">
            <summary>
            Update  Element in admin panal
            </summary>
            <remarks> 
            Update  Element by user that has update permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Elements.ElementController.Trash(System.Int64)">
            <summary>
            Trashed  Element in admin panal
            </summary>
            <remarks> 
            Trashed  Element by user that has SoftDelete permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Elements.ElementController.UnTrash(System.Int64)">
            <summary>
            UnTrashed Element in admin panal
            </summary>
            <remarks> 
            UnTrashed Element by user that has SoftDelete permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Languages.LanguageController.GetAllAsync">
            <summary>
            Get all  Languages in admin panal 
            </summary>
            <returns> All  Languages</returns>
            <remarks> Get all  Languages without filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Languages.LanguageController.GetAsync(System.Int64)">
            <summary>
            Get  Language in admin panal by Id
            </summary>
            <returns> Specific  Language </returns>
            <remarks> Get Specific  Language by id For user that has get permission</remarks>
            <param name="id" example="1">The  Language id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Languages.LanguageController.PostAsyncs(Boilerplate.Contracts.Features.Languages.Commands.CreateLanguageCommand)">
            <summary>
            Add new Language in admin panal
            </summary>
            <remarks> 
            Add Language by user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Languages.LanguageController.Put(Boilerplate.Contracts.Features.Languages.Commands.UpdateLanguageCommand)">
            <summary>
            Add new Language in admin panal
            </summary>
            <remarks> 
            Add Language by user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Languages.LanguageController.Delete(System.Int64)">
            <summary>
            Delete  Language in admin panal
            </summary>
            <remarks> 
            Delete  Language by user that has Delete permisssions
            </remarks>
            <param name="id" example="1">The  Language id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Languages.LanguageController.Trash(System.Int64)">
            <summary>
            Trashed  Language in admin panal
            </summary>
            <remarks> 
            Trashed  Language by user that has SoftDelete permisssions
            </remarks>
            <param name="id" example="1">The  Language id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Languages.LanguageController.UnTrash(System.Int64)">
            <summary>
            UnTrashed Language in admin panal
            </summary>
            <remarks> 
            UnTrashed Language by user that has SoftDelete permisssions
            </remarks> 
            <param name="id" example="1">The  Language id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Lookups.LookupController.GetUserAsync">
            <summary>
            Get User lookups in admin panal 
            </summary>
            <returns> Get User lookups in admin panal</returns>
            <remarks> Get User lookups in admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Lookups.LookupController.GetRoleAsync">
            <summary>
            Get Role lookups in admin panal 
            </summary>
            <returns> Get Role lookups in admin panal</returns>
            <remarks> Get Role lookups in admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.Lookups.LookupController.GetLanguageAsync">
            <summary>
            Get Language lookups in admin panal 
            </summary>
            <returns> Get Language lookups in admin panal</returns>
            <remarks> Get Language lookups in admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Admin.User.UserController.AddUserAsync(Boilerplate.Contracts.DTOs.Auth.Setter.UserSetterDTO)">
            <summary>
            Add new employee in admin panal
            </summary>
            <remarks> 
            Add employee by user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.RegisterUserAsync(Boilerplate.Contracts.DTOs.Auth.Setter.UserRegisterSetterDTO)">
            <summary>
            User register in site 
            </summary>
            <returns> User register</returns>
            <remarks> User register in site</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.LoginAsync(Boilerplate.Contracts.DTOs.Auth.Setter.UserLoginSetterDTO)">
            <summary>
            User can login in site or admin panal
            </summary>
            <returns> User login</returns>
            <remarks> User login in site or admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.LoginAdminAsync(Boilerplate.Contracts.DTOs.Auth.Setter.UserLoginSetterDTO)">
            <summary>
            User can login in admin panal
            </summary>
            <returns> User login</returns>
            <remarks> User login in admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.AutoLoginAsync">
            <summary>
            Auto login in site 
            </summary>
            <returns> User auto login</returns>
            <remarks> Auto login in site </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.AutoLoginAdminAsync">
            <summary>
            Auto login Admin  
            </summary>
            <returns> User auto login Admin</returns>
            <remarks> Auto login Admin  </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.ChangePasswordAsync(Boilerplate.Contracts.DTOs.Auth.Setter.ChangePasswordSetterDTO)">
            <summary>
            User can change password in site or admin panal  
            </summary>
            <returns> User can change password</returns>
            <remarks> User can change password in site or admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.ForgotPasswordAsync(Boilerplate.Contracts.DTOs.Auth.Setter.ForgetPassword.ForgetPasswordSetterDTO)">
            <summary>
            User can forgot password in site or admin panal 
            </summary>
            <returns> User forgot password</returns>
            <remarks> User forgot password in site or admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.ResetCodeAsync(Boilerplate.Contracts.DTOs.Auth.Setter.ForgetPassword.ResetCodeSetterDTO)">
            <summary>
            User can add reset code in site or admin panal 
            </summary>
            <returns> User reset code</returns>
            <remarks> User can reset code in site or admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.AuthController.ResetPasswordAsync(Boilerplate.Contracts.DTOs.Auth.Setter.ResetPasswordSetterDTO)">
            <summary>
            User can add reset password in site or admin panal 
            </summary>
            <returns> User reset password</returns>
            <remarks> User can reset password in site or admin panal</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.UpdateRoleWithPermissionAsync(Boilerplate.Contracts.DTOs.Auth.Setter.RoleWithPermissionSetterDTO)">
            <summary>
            Add or update role with permission in admin panal
            </summary>
            <remarks> 
            Add or update role with permission by user that has update permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.AddRolesToUser(Boilerplate.Contracts.DTOs.Auth.Setter.Roles.RoleUser.RoleUsersRequest)">
            <summary>
            Add roles to user in admin panal
            </summary>
            <remarks> 
            Add roles to user by user that has update permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.GetAllAsync">
            <summary>
            Get all  roles in admin panal 
            </summary>
            <returns> All  roles</returns>
            <remarks> Get all  roles without filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.GetAllAsync(Boilerplate.Contracts.Filters.Auth.RoleFilter)">
            <summary>
            Get filtered roles in admin panal 
            </summary>
            <returns> filter roles</returns>
            <remarks> Get filtered roles For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.RoleWithPermissions">
            <summary>
            Get all role with permissions in admin panal 
            </summary>
            <returns> All role with permissions</returns>
            <remarks> Get all roles with permissions For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.GetAsync(System.String)">
            <summary>
            Get role in admin panal by Id
            </summary>
            <returns> Specific  role </returns>
            <remarks> Get Specific  role by id For user that has get permission</remarks>
            <param name="id" example="c1be5862-d402-4a31-8fs9-6aded859f7a8">The  role id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.PostAsync(Boilerplate.Contracts.DTOs.Auth.Setter.Roles.Role.RoleSetterDTO)">
            <summary>
            Add new role in admin panal
            </summary>
            <remarks> 
            Add role by user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.UpdateAsync(Boilerplate.Contracts.DTOs.Auth.Setter.Roles.Role.RoleUpdateSetterDTO)">
            <summary>
            Update  role in admin panal
            </summary>
            <remarks> 
            Update role by user that has update permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.Delete(System.String)">
            <summary>
            Delete  role in admin panal
            </summary>
            <remarks> 
            Delete  role by user that has Delete permisssions
            </remarks>
            <param name="id" example="c1be5862-d402-4a31-8fs9-6aded859f7a8">The role id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.AddUserRoleAsync(Boilerplate.Contracts.DTOs.Auth.Setter.Roles.RoleUser.RoleUserSetterDTO)">
             <summary>
             Add role to user  role in admin panal
             </summary>
             <remarks> 
            Add role to user by user that has Add permisssions
             </remarks>
             <param name="id" example="c1be5862-d402-4a31-8fs9-6aded859f7a8">The role id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.RolesController.GetRoleUsersAsync(System.String)">
            <summary>
            Get role with users in admin panal
            </summary>
            <remarks> 
            Delete Get role with users by user that has get permisssions
            </remarks>
            <param name="roleName" example="Admin">The role id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.GetAllAsync">
            <summary>
            Get all  users in admin panal 
            </summary>
            <returns> All  users</returns>
            <remarks> Get all  users without filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.GetAllAdminUserAsync">
            <summary>
            Get all AdminUser in admin panal 
            </summary>
            <returns> All AdminUser</returns>
            <remarks> Get all AdminUser without filter For user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.GetAllEndUserAsync">
            <summary>
            Get all End-users in admin panal 
            </summary>
            <returns> All End-users</returns>
            <remarks> Get all End-users without filter for user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.SearchAsync(Boilerplate.Contracts.Filters.Auth.UserFilter)">
            <summary>
            Search users in admin panal 
            </summary>
            <returns> Search  users</returns>
            <remarks> filter users by user that has get permission</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.GetByIdAsync(System.String)">
            <summary>
            Get  user in admin panal by Id
            </summary>
            <returns> Specific  user </returns>
            <remarks> Get Specific user by id for user that has get permission</remarks>
            <param name="id" example="c1be5862-d402-4a31-8fs9-6aded859f7a8">The  user id</param>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.Put(Boilerplate.Contracts.DTOs.Auth.Setter.UserUpdateSetterDTO)">
            <summary>
            Update system user in admin panal
            </summary>
            <remarks> 
            Update  system user by user that has update permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.UploadUserImageAsync(Boilerplate.Contracts.DTOs.Setter.Files.FileSetterDTO)">
            <summary>
            upload user image
            </summary>
            <remarks> 
            upload user image by user in admin panal or site
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.Delete(System.String)">
            <summary>
            Delete  user in admin panal
            </summary>
            <remarks> 
            Delete  user by user that has Delete permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.AddUserAsync(Boilerplate.Contracts.DTOs.Auth.Setter.UserSetterDTO)">
            <summary>
            Add new user in admin panal
            </summary>
            <remarks> 
            Add user system by user that has Add permisssions
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.BanUser(System.String)">
            <summary>
            Ban user in admin panal
            </summary>
            <remarks> 
            Ban user by user that has soft delete permisssions in admin panal
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.ActiveUser(System.String)">
            <summary>
            Active user in admin panal
            </summary>
            <remarks> 
            Active user by user that has soft delete permisssions in admin panal
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.Auth.UserController.UnlockedUser(System.String)">
            <summary>
            UnlockedUser user in admin panal
            </summary>
            <remarks> 
            UnlockedUser user by user that has update permission in admin panal
            </remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.EndUser.Elements.ElementController.GetAllAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Get all Elements to end user in site 
            </summary>
            <returns> All Element</returns>
            <remarks> Get published and untrashed Element For end user in site</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.EndUser.Elements.ElementController.GetByKeyAsync(System.String)">
            <summary>
            Get Element by key to end user in site 
            </summary>
            <returns> Get Element by key</returns>
            <remarks> Get published and untrashed Element by key for end user in site</remarks>
        </member>
        <member name="M:Boilerplate.API.Controllers.EndUser.Languages.LanguageController.GetAllAsync">
            <summary>
            Get all languages to end user in site 
            </summary>
            <returns> All languages</returns>
            <remarks> Get published and untrashed languages For end user in site</remarks>
        </member>
    </members>
</doc>
